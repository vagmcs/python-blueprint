[project]
name = "project"
description = "A python blueprint to configure projects."
authors = [{ name = "Evangelos Michelioudakis", email = "vagmcs@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
keywords = []
dynamic = ["version", "classifiers", "dependencies"]


[project.urls]
homepage = "https://github.com/vagmcs/python-blueprint"
repository = "https://github.com/vagmcs/python-blueprint"
documentation = "https://github.com/vagmcs/python-blueprint"


[tool.poetry]
version = "0.0.0"
requires-poetry = ">=2.0"
packages = [{ include = "project" }]
classifiers = []


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
returns = "^0.25.0"


[tool.poetry.group.dev.dependencies]
docformatter = "^1.7.7"
nbqa = "^1.9.1"
isort = "^6.0.1"
ruff = "^0.11.12"
sqlfluff = "^3.4.0"
mypy = "^1.16.1"
pyupgrade = "^3.20.0"
pytest = "^8.4.1"
pytest-cov = "^6.1.1"
pytest-sugar = "^1.0.0"
pytest-mock = "^3.14.1"
hypothesis = "^6.135.20"
mkdocs = "^1.6.1"
pre-commit = "^4.2.0"
commitizen = "^4.6.0"
cz-conventional-gitmoji = "^0.7.0"


[tool.poetry.requires-plugins]
poetry-docker-plugin = ">=0.5.4"


[tool.mypy]
python_version = "3.10"
exclude = [".venv", "dist"]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
warn_no_return = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
implicit_reexport = true


[tool.docformatter]
black = true
in-place = true
recursive = true
pre-summary-newline = true
make-summary-multi-line = true


[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
color_output = true
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
known_typing = "typing"
import_heading_future = "Futures"
import_heading_stdlib = "Standard Library"
import_heading_typing = "Types"
import_heading_thirdparty = "Dependencies"
import_heading_firstparty = "Project"


[tool.ruff]
line-length = 120
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]


[tool.ruff.format]
docstring-code-format = true


[tool.pytest.ini_options]
addopts = "--capture=no --doctest-modules --cov=project --no-cov-on-fail"
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "DONT_ACCEPT_TRUE_FOR_1",
    "IGNORE_EXCEPTION_DETAIL",
]


[tool.commitizen]
name = "cz_gitmoji"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
template = "docs/templates/changelog.j2"
changelog_file = "docs/docs/changelog.md"
release_notes_file = "docs/docs/release_notes.md"


[tool.sqlfluff.core]
dialect = "ansi"
max_line_length = 120


[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "upper"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
