[tool.poetry]
name = "project"
version = "0.0.1"
description = "A python blueprint to configure projects."
authors = [ "Evangelos Michelioudakis <vagmcs@gmail.com>" ]
license = ""
readme = "README.md"
keywords = [ ]
repository = "https://github.com/vagmcs/python-blueprint"
documentation = "https://github.com/vagmcs/python-blueprint"
classifiers = [ ]


[[tool.poetry.packages]]
include = "project"


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
returns = "^0.25.0"


[tool.poetry.group.dev.dependencies]
docformatter = "^1.7.5"
isort = "^6.0.1"
ruff = "^0.11.2"
sqlfluff = "^3.3.1"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
pytest-sugar = "^1.0.0"
pytest-mock = "^3.14.0"
hypothesis = "^6.128.2"
mkdocs = "^1.6.1"
pre-commit = "^4.2.0"
commitizen = "^4.4.1"
cz-conventional-gitmoji = "^0.6.1"


[tool.poetry.group.dev.dependencies.black]
extras = [ "jupyter" ]
version = "^25.1.0"


[tool.poetry.requires-plugins]
poetry-docker-plugin = ">=0.5.4"


[tool.mypy]
python_version = "3.10"
exclude = [ ".venv", "dist" ]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
warn_no_return = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
implicit_reexport = true


[tool.black]
line_length = 120
target_version = [ "py310", "py311", "py312" ]
color = true


[tool.docformatter]
black = true
in-place = true
recursive = true
pre-summary-newline = true
make-summary-multi-line = true


[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
color_output = true
sections = [
"FUTURE",
"TYPING",
"STDLIB",
"THIRDPARTY",
"FIRSTPARTY",
"LOCALFOLDER"
]
known_typing = "typing"
import_heading_future = "Futures"
import_heading_stdlib = "Standard Library"
import_heading_typing = "Types"
import_heading_thirdparty = "Dependencies"
import_heading_firstparty = "Project"


[tool.ruff]
line-length = 120
target-version = "py310"
exclude = [
".bzr",
".direnv",
".eggs",
".git",
".git-rewrite",
".hg",
".ipynb_checkpoints",
".mypy_cache",
".nox",
".pants.d",
".pyenv",
".pytest_cache",
".pytype",
".ruff_cache",
".svn",
".tox",
".venv",
".vscode",
"__pypackages__",
"_build",
"buck-out",
"build",
"dist",
"node_modules",
"site-packages",
"venv"
]


[tool.commitizen]
name = "cz_gitmoji"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
template = "docs/templates/release_notes.j2"
changelog_file = "docs/docs/release_notes.md"


[tool.sqlfluff.core]
dialect = "ansi"
max_line_length = 120


[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "upper"


[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"
